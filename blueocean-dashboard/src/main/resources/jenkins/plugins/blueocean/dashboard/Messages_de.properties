# common
common.date.readable.short=DD MMM h:mma Z
common.date.readable.long=DD MMM YYYY h:mma Z
common.date.duration.format=m[ Minuten] s[ Sekunden]
common.date.duration.hint.format=M [Monate], d [ Tage], h[ Stunden], m[ Minuten], s[ Sekunden]
common.pager.loading=Laden...
common.pager.more=Mehr anzeigen

# home page / dashboard
home.header.dashboard=\u00dcbersicht
home.header.button.createpipeline=Neue Pipeline
home.pipelineslist.header.name=Name
home.pipelineslist.header.health=Gesundheit
home.pipelineslist.header.branches=Ableger
home.pipelineslist.header.pullrequests=Integrationsanfrage
home.pipelineslist.row.passing={0} erfolgreich
home.pipelineslist.row.failing={0} fehlgeschlagen

# pipeline details
pipelinedetail.common.tab.activity=Aktivit\u00E4ten
pipelinedetail.common.tab.branches=Ableger
pipelinedetail.common.tab.pullrequests=Integrationsanfrage
pipelinedetail.activity.button.run=Jetzt starten
pipelinedetail.activity.header.status=Status
pipelinedetail.activity.header.build=Build
pipelinedetail.activity.header.commit=Commit
pipelinedetail.activity.header.branch=Ableger
pipelinedetail.activity.header.message=Nachricht
pipelinedetail.activity.header.duration=Dauer
pipelinedetail.activity.header.completed=Beendet
pipelinedetail.branches.header.health=Gesundheit
pipelinedetail.branches.header.status=Status
pipelinedetail.branches.header.branch=Ableger
pipelinedetail.branches.header.commit=Commit
pipelinedetail.branches.header.message=Letzte Nachricht
pipelinedetail.branches.header.completed=Beendet
pipelinedetail.pullrequests.header.status=Status
pipelinedetail.pullrequests.header.build=Letzte Ausf\u00fchrung
pipelinedetail.pullrequests.header.summary=Zusammenfassung
pipelinedetail.pullrequests.header.author=Autor
pipelinedetail.pullrequests.header.completed=Beendet

#run details
rundetail.header.tab.pipeline=Pipeline
rundetail.header.tab.changes=\u00C4nderungen
rundetail.header.tab.tests=Tests
rundetail.header.tab.artifacts=Artefakte
rundetail.header.branch=Ableger
rundetail.header.commit=Commit
rundetail.header.changes.none=Keine \u00C4nderungen
rundetail.header.changes.count={0} \u00E4nderungen
rundetail.header.changes.names=\u00C4nderungen von {0}
rundetail.pipeline.nosteps=Diese Pipeline definiert keine Build-Schritte.
rundetail.changes.header.commit=Commit
rundetail.changes.header.author=Autor
rundetail.changes.header.message=Nachricht
rundetail.changes.header.date=Datum
rundetail.tests.passed=Erfolgreich {0}
rundetail.tests.failed=Fehlgeschlagen {0}
rundetail.tests.skipped=\u00DCbersprungen - {0}
rundetail.tests.duration=Dauer {0}
rundetail.tests.results.passing.all=Alle Tests erfolgreich
rundetail.tests.results.passing.count=Sehr gut! Alle {0} Tests waren erfolgreich.
rundetail.tests.results.passing.msg=Wie schaut es?
rundetail.tests.results.fixed=Korrigiert
rundetail.tests.results.failures.new=Neue Fehler
rundetail.tests.results.failures=Fehler
rundetail.tests.results.passing=Erfolgreich
rundetail.tests.results.skipped=\u00DCbersprungen
rundetail.tests.results.errors.new.count=Neue Fehler - {0}
rundetail.tests.results.errors.existing.count=Testfehler - {0}
rundetail.tests.results.skipped.count=\u00DCbersprungen - {0}
rundetail.tests.results.error.message=Fehler
rundetail.tests.results.error.output=Stacktrace
rundetail.artifacts.header.name=Name
rundetail.artifacts.header.size=Gr\u00F6sse
rundetail.artifacts.button.download=Artefakt herunterladen

# the emptyState keys assume that you will parse them with a markdown parser
EmptyState.activity=# Auf die Pl\u00E4tze, fertig...\nHmm, es liegen keine Ausf\u00fchrungen f\u00FCr vor.\n\nF\u00FCgen sie ein Commit zum Repository _{0}_ oder starten Sie die Ausf\u00fchrung per Hand.
EmptyState.artifacts=Es gibt keine Artefakte f\u00FCr diese Ausf\u00fchrung.\n\n
EmptyState.branches=# Ableger ziehen\nErstellen Sie einen Ableger (Branch) in Ihrem Repository _{0}_ und Jenkins wird Ihre \u00C4nderungen testen.\n\nProbieren Sie es und werden Sie der/die Held(in) Ihres Teams.
EmptyState.branches.notSupported=# Ableger nicht unterst\u00FCtzt.\nAbleger (Branch) Ausf\u00fcrungen funktionieren nur mit dem _Multibranch Pipeline_ Aufgabentyp. Dies ist nur ein guter Grund Jenkins Pipeline zu nutzen.\n\n[Weitere gute Gr\u00FCnde](https://jenkins.io/doc/book/pipeline-as-code/)
EmptyState.changes=Es gibt keine \u00C4nderungen f\u00FCr diese Ausf\u00fchrung.\n\n
EmptyState.pr.notSupported=# Integrationsanfrage f\u00FCr \u00C4nderungen (Pull Requests) nicht unterst\u00FCtzt.\nDie Validierung von Integrationsanfragen funktionieren nur mit dem _Multibranch Pipeline_ Aufgabentyp. Dies ist nur ein guter Grund Jenkins Pipeline zu nutzen.\n\n[Weitere gute Gr\u00FCnde](https://jenkins.io/doc/book/pipeline-as-code/)
EmptyState.pr=# Push me, pull you\nWenn eine Integrationsanfrage in Ihrem Repository _{0}_ erstellt wird, wird Jenkins diese testen und den Status der Integrationsanfrage GitHub melden.
EmptyState.tests=Es gibt keine Tests f\u00FCr diese Ausf\u00fchrung.\n\n
Enable=Aktivieren
Not.found.heading=Seite nicht gefunden (404)
Not.found.message=Jenkins konnte die gesuchte Seite nicht finden. Bitte kontrollieren Sie die URL oder dr\u00FCcken Sie den zur\u00FCck Knopf.
Open.dashboard=\u00dcbersicht anzeigen
Show.complete.logs=Ganzes Protokoll
