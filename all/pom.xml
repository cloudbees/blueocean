<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>io.jenkins.blueocean</groupId>
    <artifactId>blueocean-parent</artifactId>
    <version>1.0-SNAPSHOT</version>
  </parent>

  <artifactId>blueocean-all</artifactId>
  <packaging>hpi</packaging>

  <name>BlueOcean :: Aggregator</name>

  <dependencies>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>blueocean-core</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>pipeline-service-api</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>profile-service-api</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>embedded-driver</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>auth-email-pass</artifactId>
      <version>${project.version}</version>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.codehaus.gmaven</groupId>
        <artifactId>groovy-maven-plugin</artifactId>
        <version>2.0</version>
        <executions>
          <execution>
            <phase>compile</phase>
            <goals>
              <goal>execute</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <!-- links to all the plugins via hpl for live reloading -->
          <source>
            def plugins = new File(basedir, 'work/plugins');
            for (dep in project.dependencies) {
              if (dep.groupId != project.groupId) {
                continue;
              }
              def a = dep.artifactId;
              def theHpl = new File(new File(basedir.parentFile, a.replaceFirst('^blueocean-', '')), 'target/test-classes/the.hpl');
              if (theHpl.file) {
                plugins.mkdirs();
                ant.copy(file: theHpl, tofile: new File(plugins, a + '.hpl'), overwrite: true, verbose: true);
              } else {
                println('Warning: no such file ' + theHpl);
              }
            }
          </source>
        </configuration>
      </plugin>

    </plugins>
  </build>
</project>
